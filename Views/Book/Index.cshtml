@model IEnumerable<OnlineBookstore.Data.Entities.Book>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thread>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PhotoURL)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.YearOfIssue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfPages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookType)
            </th>
            <th colspan="3">Actions</th>
        </tr>
    </thread>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="~/Images/@item.PhotoURL" width="100" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.YearOfIssue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfPages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookType)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-block btn-primary">
                        <i class="fas fa-edit"></i> &nbsp; Edit
                    </a>

                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-block btn-primary">
                        <i class="fas fa-info-circle"></i> &nbsp; Details
                    </a>

                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-block btn-primary">
                        <i class="fas fa-trash-alt"></i> &nbsp; Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

            $("#AddNewAuthor").click(function () {
            $.ajax({
                type: "POST",
                url: "/Authors/CreateAuthorAJAX",
                data: { name: $("#CreateAuthorName").val(), shortDescription: $("#CreateAuthorShortDescription").val() },
                datatype: "json",
                success: function (data) {
                    console.log(data);
                    $("#Author").append("<option value=" + data.id + ">" + data.name + "</option>");
                },
                error: function () {
                    alert("error");
                },
                columns: [
                    {
                        "data" : "photoURL"
                        "render": function (data) {
                            return '<img src="images/' + data + '" width="100" />';
                            }
                        }
]
            });
        });

